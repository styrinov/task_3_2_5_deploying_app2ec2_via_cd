name: Build and Push to ECR

on:
  push:
    branches:
      - 'feature/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}      

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      IMAGE_URI: ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2



      - name: Build and Push Backend
        run: |
          echo "Building image..."
          docker build -t $IMAGE_URI:${{ github.sha }} .

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            docker tag $IMAGE_URI:${{ github.sha }} $IMAGE_URI:master
            docker push $IMAGE_URI:master
          elif [[ "${{ github.ref }}" == "refs/heads/feature/**" ]]; then
            docker tag $IMAGE_URI:${{ github.sha }} $IMAGE_URI:dev
            docker push $IMAGE_URI:dev
          fi

          if [[ "${{ github.ref }}" =~ refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            docker tag $IMAGE_URI:${{ github.sha }} $IMAGE_REPO-backend:$TAG
            docker push $IMAGE_URI:$TAG
          fi

          docker push $IMAGE_URI:${{ github.sha }}  

  notify_failure:
    name: Notify Failure on Telegram
    if: failure()
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Send Telegram Message
        run: |
          MESSAGE="ðŸš¨ GitHub Action Job FAILED\nRepo: ${{ github.repository }}\nBranch: ${{ github.ref }}\nCommit: ${{ github.sha }}\nJob: ${{ github.job }}"
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id=$TELEGRAM_CHAT_ID \
            -d text="$MESSAGE"          